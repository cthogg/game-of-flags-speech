{"version":3,"sources":["countriesEasy.js","App.js","serviceWorker.js","index.js"],"names":["countries","FR","name","native","phone","continent","capital","currency","languages","emoji","emojiU","ES","GR","AR","AT","AU","BD","BE","LB","CA","CH","CN","JM","CY","CZ","DE","Footer","react_default","a","createElement","className","class","href","SpeechRecognition","_ref","transcript","resetTranscript","browserSupportsSpeechRecognition","numberOfCountries","Object","keys","length","_useState","useState","_useState2","slicedToArray","playState","setPlayState","_useState3","_useState4","countryNumber","setCountryNumber","_useState5","_useState6","setLastRightWrong","_useState7","_useState8","lastCorrectAnswer","setLastCorrectAnswer","_useState9","_useState10","skippedAnswers","setSkippedAnswers","_useState11","_useState12","correctAnswers","setCorrectAnswers","selectedCountry","values","selectedCountryName","selectedCountryEmoji","App_Footer","includes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6MACaA,EAAY,CACrBC,GAAM,CACJC,KAAQ,SACRC,OAAU,SACVC,MAAS,KACTC,UAAa,KACbC,QAAW,QACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZC,GAAM,CACJT,KAAQ,QACRC,OAAU,YACVC,MAAS,KACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,KACA,KACA,KACA,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZE,GAAM,CACJV,KAAQ,SACRC,OAAU,uCACVC,MAAS,KACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZG,GAAM,CACFX,KAAQ,YACRC,OAAU,YACVC,MAAS,KACTC,UAAa,KACbC,QAAW,eACXC,SAAY,MACZC,UAAa,CACX,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEdI,GAAM,CACJZ,KAAQ,UACRC,OAAU,gBACVC,MAAS,KACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZK,GAAM,CACJb,KAAQ,YACRC,OAAU,YACVC,MAAS,KACTC,UAAa,KACbC,QAAW,WACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBACVM,GAAM,CACJd,KAAQ,aACRC,OAAU,aACVC,MAAS,MACTC,UAAa,KACbC,QAAW,QACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZO,GAAM,CACJf,KAAQ,UACRC,OAAU,YACVC,MAAS,KACTC,UAAa,KACbC,QAAW,WACXC,SAAY,MACZC,UAAa,CACX,KACA,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZQ,GAAM,CACJhB,KAAQ,UACRC,OAAU,iCACVC,MAAS,MACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZS,GAAM,CACJjB,KAAQ,SACRC,OAAU,SACVC,MAAS,IACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZU,GAAM,CACJlB,KAAQ,cACRC,OAAU,UACVC,MAAS,KACTC,UAAa,KACbC,QAAW,OACXC,SAAY,cACZC,UAAa,CACX,KACA,KACA,MAEFC,MAAS,2BACTC,OAAU,mBACTW,GAAM,CACPnB,KAAQ,QACRC,OAAU,eACVC,MAAS,KACTC,UAAa,KACbC,QAAW,UACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZY,GAAM,CACJpB,KAAQ,UACRC,OAAU,UACVC,MAAS,OACTC,UAAa,KACbC,QAAW,WACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,mBAEZa,GAAM,CACJrB,KAAQ,SACRC,OAAU,uCACVC,MAAS,MACTC,UAAa,KACbC,QAAW,UACXC,SAAY,MACZC,UAAa,CACX,KACA,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZc,GAAM,CACJtB,KAAQ,iBACRC,OAAU,0BACVC,MAAS,MACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,KACA,MAEFC,MAAS,2BACTC,OAAU,mBAEZe,GAAM,CACJvB,KAAQ,UACRC,OAAU,cACVC,MAAS,KACTC,UAAa,KACbC,QAAW,SACXC,SAAY,MACZC,UAAa,CACX,MAEFC,MAAS,2BACTC,OAAU,oBCnNZgB,SAAS,kBACRC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACvBH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,YACTJ,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAAR,eADb,mBAEEL,EAAAC,EAAAC,cAAA,KAAGG,KAAK,kDAAR,gBA8ISC,MAjII,SAAAC,GAIb,IAHJC,EAGID,EAHJC,WACAC,EAEIF,EAFJE,gBACAC,EACIH,EADJG,iCAEMC,EAAoBC,OAAOC,KAAKxC,GAAWyC,OAD7CC,EAE8BC,mBA5BjB,SA0BbC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAEGI,EAFHF,EAAA,GAEcG,EAFdH,EAAA,GAAAI,EAGsCL,mBAAS,GAH/CM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAGGE,EAHHD,EAAA,GAGkBE,EAHlBF,EAAA,GAAAG,EAIwCT,oBAAS,GAJjDU,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GAImBE,GAJnBD,EAAA,GAAAA,EAAA,IAAAE,EAK8CZ,mBAAS,IALvDa,EAAAjB,OAAAM,EAAA,EAAAN,CAAAgB,EAAA,GAKGE,EALHD,EAAA,GAKsBE,EALtBF,EAAA,GAAAG,EAMwChB,mBAAS,GANjDiB,EAAArB,OAAAM,EAAA,EAAAN,CAAAoB,EAAA,GAMGE,EANHD,EAAA,GAMmBE,EANnBF,EAAA,GAAAG,EAOwCpB,mBAAS,GAPjDqB,EAAAzB,OAAAM,EAAA,EAAAN,CAAAwB,EAAA,GAOGE,EAPHD,EAAA,GAOmBE,EAPnBF,EAAA,GASAG,EAAkB5B,OAAO6B,OAAOpE,GAAWkD,GAC3CmB,EAAsBF,EAAgBjE,KACtCoE,EAAuBH,EAAgB1D,MAgG3C,OACEkB,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEfH,EAAAC,EAAAC,cAAC0C,EAAD,MAEN5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,uBAAd,IAAwCH,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WACZH,EAAAC,EAAAC,cAzFe,WACnB,MAtDe,UAsDXiB,GACEX,EAAWqC,SAAS,WACtBpC,IACAW,EAxDa,SA2DbpB,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,aAAf,mBAEAH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,aACZ,IADH,SAGIH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,+CAlEG,SAmED,IACNF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,kCACZ,IADH,qBAEqB,KACf,IACNH,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,4FAAR,qBAAb,gDAKFkB,IAAkBZ,EAAoB,GACpCH,EAAWqC,SAAS,UACtBN,EAAkB,GAClBJ,EAAkB,GAClBJ,EAAqB,IACrBtB,IACAW,EArFW,SAsFXI,EAAiB,IAGjBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,sBAAkB,IAClBF,EAAAC,EAAAC,cAAA,aAAKoC,EAAL,YACAtC,EAAAC,EAAAC,cAAA,aAAKgC,EAAL,YACAlC,EAAAC,EAAAC,cAAA,KAAGC,UAAW,kCACX,IADH,qBAGK,MAINO,EASDS,IAAcA,GACZX,EAAWqC,SAASH,KAtE1Bf,GAAkB,GAClBY,EAAkBD,EAAiB,GACnCd,EAAiBD,EAAgB,GACjCd,IACAsB,EAAqBW,IAsEflC,EAAWqC,SAhHJ,UA8CbV,EAAkBD,EAAiB,GACnCP,GAAkB,GAClBH,EAAiBD,EAAgB,GACjCd,KAoEIT,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAW,wBAAd,qBAEAH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,aAAcwC,GAC/B3C,EAAAC,EAAAC,cAAA,aAAKoC,EAAL,YACAtC,EAAAC,EAAAC,cAAA,aAAKgC,EAAL,YACAlC,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,aAAK4B,EAAL,KACA9B,EAAAC,EAAAC,cAAA,QAAMC,UAAW,aAAcK,UAlBrC,EAPIR,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,+CAsCF,eCvIY4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6c79203a.chunk.js","sourcesContent":["\nexport const countries = {\n    \"FR\": {\n      \"name\": \"France\",\n      \"native\": \"France\",\n      \"phone\": \"33\",\n      \"continent\": \"EU\",\n      \"capital\": \"Paris\",\n      \"currency\": \"EUR\",\n      \"languages\": [\n        \"fr\"\n      ],\n      \"emoji\": \"🇫🇷\",\n      \"emojiU\": \"U+1F1EB U+1F1F7\"\n    },\n    \"ES\": {\n      \"name\": \"Spain\",\n      \"native\": \"España\",\n      \"phone\": \"34\",\n      \"continent\": \"EU\",\n      \"capital\": \"Madrid\",\n      \"currency\": \"EUR\",\n      \"languages\": [\n        \"es\",\n        \"eu\",\n        \"ca\",\n        \"gl\",\n        \"oc\"\n      ],\n      \"emoji\": \"🇪🇸\",\n      \"emojiU\": \"U+1F1EA U+1F1F8\"\n    },\n    \"GR\": {\n      \"name\": \"Greece\",\n      \"native\": \"Ελλάδα\",\n      \"phone\": \"30\",\n      \"continent\": \"EU\",\n      \"capital\": \"Athens\",\n      \"currency\": \"EUR\",\n      \"languages\": [\n        \"el\"\n      ],\n      \"emoji\": \"🇬🇷\",\n      \"emojiU\": \"U+1F1EC U+1F1F7\"\n    },\n    \"AR\": {\n        \"name\": \"Argentina\",\n        \"native\": \"Argentina\",\n        \"phone\": \"54\",\n        \"continent\": \"SA\",\n        \"capital\": \"Buenos Aires\",\n        \"currency\": \"ARS\",\n        \"languages\": [\n          \"es\",\n          \"gn\"\n        ],\n        \"emoji\": \"🇦🇷\",\n        \"emojiU\": \"U+1F1E6 U+1F1F7\"\n      },\n    \"AT\": {\n      \"name\": \"Austria\",\n      \"native\": \"Österreich\",\n      \"phone\": \"43\",\n      \"continent\": \"EU\",\n      \"capital\": \"Vienna\",\n      \"currency\": \"EUR\",\n      \"languages\": [\n        \"de\"\n      ],\n      \"emoji\": \"🇦🇹\",\n      \"emojiU\": \"U+1F1E6 U+1F1F9\"\n    },\n    \"AU\": {\n      \"name\": \"Australia\",\n      \"native\": \"Australia\",\n      \"phone\": \"61\",\n      \"continent\": \"OC\",\n      \"capital\": \"Canberra\",\n      \"currency\": \"AUD\",\n      \"languages\": [\n        \"en\"\n      ],\n      \"emoji\": \"🇦🇺\",\n      \"emojiU\": \"U+1F1E6 U+1F1FA\"\n    },\"BD\": {\n        \"name\": \"Bangladesh\",\n        \"native\": \"Bangladesh\",\n        \"phone\": \"880\",\n        \"continent\": \"AS\",\n        \"capital\": \"Dhaka\",\n        \"currency\": \"BDT\",\n        \"languages\": [\n          \"bn\"\n        ],\n        \"emoji\": \"🇧🇩\",\n        \"emojiU\": \"U+1F1E7 U+1F1E9\"\n      },\n      \"BE\": {\n        \"name\": \"Belgium\",\n        \"native\": \"België\",\n        \"phone\": \"32\",\n        \"continent\": \"EU\",\n        \"capital\": \"Brussels\",\n        \"currency\": \"EUR\",\n        \"languages\": [\n          \"nl\",\n          \"fr\",\n          \"de\"\n        ],\n        \"emoji\": \"🇧🇪\",\n        \"emojiU\": \"U+1F1E7 U+1F1EA\"\n      },\n      \"LB\": {\n        \"name\": \"Lebanon\",\n        \"native\": \"لبنان\",\n        \"phone\": \"961\",\n        \"continent\": \"AS\",\n        \"capital\": \"Beirut\",\n        \"currency\": \"LBP\",\n        \"languages\": [\n          \"ar\",\n          \"fr\"\n        ],\n        \"emoji\": \"🇱🇧\",\n        \"emojiU\": \"U+1F1F1 U+1F1E7\"\n      },\n      \"CA\": {\n        \"name\": \"Canada\",\n        \"native\": \"Canada\",\n        \"phone\": \"1\",\n        \"continent\": \"NA\",\n        \"capital\": \"Ottawa\",\n        \"currency\": \"CAD\",\n        \"languages\": [\n          \"en\",\n          \"fr\"\n        ],\n        \"emoji\": \"🇨🇦\",\n        \"emojiU\": \"U+1F1E8 U+1F1E6\"\n      },\n      \"CH\": {\n        \"name\": \"Switzerland\",\n        \"native\": \"Schweiz\",\n        \"phone\": \"41\",\n        \"continent\": \"EU\",\n        \"capital\": \"Bern\",\n        \"currency\": \"CHE,CHF,CHW\",\n        \"languages\": [\n          \"de\",\n          \"fr\",\n          \"it\"\n        ],\n        \"emoji\": \"🇨🇭\",\n        \"emojiU\": \"U+1F1E8 U+1F1ED\"\n      }, \"CN\": {\n        \"name\": \"China\",\n        \"native\": \"中国\",\n        \"phone\": \"86\",\n        \"continent\": \"AS\",\n        \"capital\": \"Beijing\",\n        \"currency\": \"CNY\",\n        \"languages\": [\n          \"zh\"\n        ],\n        \"emoji\": \"🇨🇳\",\n        \"emojiU\": \"U+1F1E8 U+1F1F3\"\n      },\n      \"JM\": {\n        \"name\": \"Jamaica\",\n        \"native\": \"Jamaica\",\n        \"phone\": \"1876\",\n        \"continent\": \"NA\",\n        \"capital\": \"Kingston\",\n        \"currency\": \"JMD\",\n        \"languages\": [\n          \"en\"\n        ],\n        \"emoji\": \"🇯🇲\",\n        \"emojiU\": \"U+1F1EF U+1F1F2\"\n      },\n      \"CY\": {\n        \"name\": \"Cyprus\",\n        \"native\": \"Κύπρος\",\n        \"phone\": \"357\",\n        \"continent\": \"EU\",\n        \"capital\": \"Nicosia\",\n        \"currency\": \"EUR\",\n        \"languages\": [\n          \"el\",\n          \"tr\",\n          \"hy\"\n        ],\n        \"emoji\": \"🇨🇾\",\n        \"emojiU\": \"U+1F1E8 U+1F1FE\"\n      },\n      \"CZ\": {\n        \"name\": \"Czech Republic\",\n        \"native\": \"Česká republika\",\n        \"phone\": \"420\",\n        \"continent\": \"EU\",\n        \"capital\": \"Prague\",\n        \"currency\": \"CZK\",\n        \"languages\": [\n          \"cs\",\n          \"sk\"\n        ],\n        \"emoji\": \"🇨🇿\",\n        \"emojiU\": \"U+1F1E8 U+1F1FF\"\n      },\n      \"DE\": {\n        \"name\": \"Germany\",\n        \"native\": \"Deutschland\",\n        \"phone\": \"49\",\n        \"continent\": \"EU\",\n        \"capital\": \"Berlin\",\n        \"currency\": \"EUR\",\n        \"languages\": [\n          \"de\"\n        ],\n        \"emoji\": \"🇩🇪\",\n        \"emojiU\": \"U+1F1E9 U+1F1EA\"\n      },\n\n    }\n  ","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport { countries } from \"./countriesEasy\";\nimport \"./App.sass\";\nconst startState = \"start\";\nconst playingState = \"play\";\nconst passWord = \"skip\";\n\nconst Footer = () =>\n  (    <footer className=\"footer\">\n  <div class=\"content \">\n    <p>\n      Created by <a href=\"https://chrishogg.net/\">Chris Hogg </a>. Source code on \n      <a href=\"https://github.com/cthogg/game-of-flags-speech\"> Github</a>\n    </p>\n  </div>\n</footer>)\n\n\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\n\nconst Dictaphone = ({\n  transcript,\n  resetTranscript,\n  browserSupportsSpeechRecognition\n}) => {\n  const numberOfCountries = Object.keys(countries).length;\n  const [playState, setPlayState] = useState(startState);\n  const [countryNumber, setCountryNumber] = useState(0);\n  const [lastRightWrong, setLastRightWrong] = useState(false);\n  const [lastCorrectAnswer, setLastCorrectAnswer] = useState(\"\");\n  const [skippedAnswers, setSkippedAnswers] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  let selectedCountry = Object.values(countries)[countryNumber];\n  let selectedCountryName = selectedCountry.name;\n  let selectedCountryEmoji = selectedCountry.emoji;\n\n  const correctAnswerActions = () => {\n    setLastRightWrong(true);\n    setCorrectAnswers(correctAnswers + 1);\n    setCountryNumber(countryNumber + 1);\n    resetTranscript();\n    setLastCorrectAnswer(selectedCountryName);\n  };\n\n  const skippedAnswerActions = () => {\n    setSkippedAnswers(skippedAnswers + 1);\n    setLastRightWrong(false);\n    setCountryNumber(countryNumber + 1);\n    resetTranscript();\n  };\n  const CentreColumn = () => {\n    if (playState === startState) {\n      if (transcript.includes(\"start\")) {\n        resetTranscript();\n        setPlayState(playingState);\n      }\n      return (\n        <div>\n          {\" \"}\n          <h1 className={\"is-size-2\"}> Game of Flags </h1>\n\n          <h1 className={\"is-size-3\"}>\n            {\" \"}\n            {`Rules:`}\n              <p>1. Say the name of the country</p>\n              <p>2. If you do not know the name say {passWord}</p>\n          </h1>{\" \"}\n          <h1 className={\"is-size-1 has-text-weight-bold\"}>\n            {\" \"}\n            Say Start to begin{\" \"}\n          </h1>{\" \"}\n          <p> Uses the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API\"> Web Speech api  </a>so only works on modern versions of Chrome</p>\n        </div>\n      );\n    }\n\n    if (countryNumber === numberOfCountries - 1) {\n      if (transcript.includes(\"home\")) {\n        setCorrectAnswers(0);\n        setSkippedAnswers(0);\n        setLastCorrectAnswer(\"\");\n        resetTranscript();\n        setPlayState(startState);\n        setCountryNumber(0);\n      }\n      return (\n        <div className={'is-size-2'} >\n          <p > Finish! </p>{\" \"}\n          <p> {correctAnswers} correct</p>\n          <p> {skippedAnswers} skipped</p>\n          <p className={\"is-size-1 has-text-weight-bold\"}>\n            {\" \"}\n            Say home to begin\n          </p>{\" \"}\n        </div>\n      );\n    }\n    if (!browserSupportsSpeechRecognition) {\n      return (\n        <div>\n          {\" \"}\n          <p> This site only works on Chrome </p>\n        </div>\n      );\n    }\n\n    if (playState === playState) {\n      if (transcript.includes(selectedCountryName)) {\n        correctAnswerActions();\n      }\n\n      if (transcript.includes(passWord)) {\n        skippedAnswerActions();\n      }\n\n      return (\n        <div className={\"is-size-2\"}>\n          <p className={\"has-text-weight-bold\"}> Say pass to skip</p>\n\n          <span className={\"is-size-6\"}>{selectedCountryEmoji}</span>\n          <p> {correctAnswers} correct</p>\n          <p> {skippedAnswers} skipped</p>\n          <p> Last correct answer: </p>\n          <p> {lastCorrectAnswer} </p>\n          <span className={\"is-size-5\"}>{transcript}</span>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div> \n          <div className=\"columns\">\n</div>\n          <Footer></Footer>\n\n    <div className=\"columns\">\n          <div className={`column is-one-fifth`}> <p></p></div>\n      <div className={`column `}>\n        <CentreColumn> </CentreColumn>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nDictaphone.propTypes = propTypes;\n\nexport default SpeechRecognition(Dictaphone);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}